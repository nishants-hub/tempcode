{"version":3,"file":"js/2936.1209076e.js","mappings":"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","sources":["webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/StatusSearch.vue","webpack://construction-commercial-search-frontend/src/components/Utility/CustomDropdowns/StatusSearch.vue","webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/StatusSearch.vue?ee71","webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/StatusSearch.vue?4871"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-full\"},[(_vm.isMultiSelect && _vm.showSelectedList && _vm.statuses?.length > 0)?_c('div',{staticClass:\"mb-spacing-250 flex w-full flex-wrap gap-spacing-150\"},_vm._l((_vm.statuses),function(status){return _c('GeneralRemovableItem',{key:status?._id,attrs:{\"item-name\":status?.display_name},on:{\"on-item-removed\":function($event){return _vm.removeStatusFromStatuses(status)}}})}),1):_vm._e(),_c('FormInput',{ref:\"searchInputRef\",attrs:{\"label\":_vm.dropdownLabel,\"input-type\":'searchable-input',\"inputId\":_vm.dropdownId,\"prevent-v-model\":true,\"clear-button\":_vm.status ? true : false,\"suggestions\":_vm.getFilteredStatusSuggestions,\"vertical-padding\":_vm.verticalPadding,\"show-error\":_vm.showError,\"field-validations\":_vm.fieldValidations,\"is-suggestions-fetching\":_vm.isStatusSuggestionsFetching,\"order\":_vm.order},on:{\"set-suggestion\":_vm.handleSelect,\"reset-suggestions\":_vm.handleReset,\"blur\":_vm.handleBlur,\"focus\":_vm.handleFocus,\"clear-suggestions\":_vm.clearSuggestions,\"fetch-suggestions\":_vm.fetchDebouncedStatusSuggestions,\"enter-pressed\":function($event){return _vm.$emit('enter-pressed')}},model:{value:(_vm.status),callback:function ($$v) {_vm.status=$$v},expression:\"status\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"w-full\">\r\n    <!-- Display selected statuses in multi-select mode -->\r\n    <div\r\n      v-if=\"isMultiSelect && showSelectedList && statuses?.length > 0\"\r\n      class=\"mb-spacing-250 flex w-full flex-wrap gap-spacing-150\"\r\n    >\r\n      <GeneralRemovableItem\r\n        v-for=\"status in statuses\"\r\n        :key=\"status?._id\"\r\n        :item-name=\"status?.display_name\"\r\n        @on-item-removed=\"removeStatusFromStatuses(status)\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Form input for searching and selecting statuses -->\r\n    <FormInput\r\n      v-model=\"status\"\r\n      ref=\"searchInputRef\"\r\n      :label=\"dropdownLabel\"\r\n      :input-type=\"'searchable-input'\"\r\n      :inputId=\"dropdownId\"\r\n      :prevent-v-model=\"true\"\r\n      :clear-button=\"status ? true : false\"\r\n      :suggestions=\"getFilteredStatusSuggestions\"\r\n      :vertical-padding=\"verticalPadding\"\r\n      :show-error=\"showError\"\r\n      :field-validations=\"fieldValidations\"\r\n      :is-suggestions-fetching=\"isStatusSuggestionsFetching\"\r\n      :order=\"order\"\r\n      @set-suggestion=\"handleSelect\"\r\n      @reset-suggestions=\"handleReset\"\r\n      @blur=\"handleBlur\"\r\n      @focus=\"handleFocus\"\r\n      @clear-suggestions=\"clearSuggestions\"\r\n      @fetch-suggestions=\"fetchDebouncedStatusSuggestions\"\r\n      @enter-pressed=\"$emit('enter-pressed')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { debounce } from \"lodash\";\r\n\r\nexport default {\r\n  components: {\r\n    GeneralRemovableItem: () =>\r\n      import(\"@/components/General/RemovableItem.vue\"),\r\n    FormInput: () => import(\"@/components/General/FormInput.vue\"),\r\n  },\r\n  props: {\r\n    statuses: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => [],\r\n    },\r\n    selectedStatus: {\r\n      type: Object,\r\n      required: false,\r\n      default: null,\r\n    },\r\n    dropdownLabel: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    dropdownId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    isMultiSelect: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n    showSelectedList: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n    showError: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n    verticalPadding: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    fieldValidations: {\r\n      type: Object,\r\n      required: false,\r\n    },\r\n    order: {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n    statusOptions: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      status: \"\",\r\n      statusSuggestions: [],\r\n      isStatusSuggestionsFetching: false,\r\n      fetchDebouncedStatusSuggestions: debounce(\r\n        this.fetchStatusSuggestions,\r\n        300,\r\n      ),\r\n    };\r\n  },\r\n  watch: {\r\n    selectedStatus() {\r\n      this.status = this.selectedStatus?.display_name;\r\n    },\r\n    status(newVal) {\r\n      this.$emit(\"on-status-update\", { display_name: newVal });\r\n    },\r\n  },\r\n  computed: {\r\n    getFilteredStatusSuggestions() {\r\n      let output;\r\n      if (this.isMultiSelect) {\r\n        // Filter out statuses already in the selected list\r\n        output = this.statusSuggestions?.filter(\r\n          (suggestion) =>\r\n            !this.statuses?.some(\r\n              (status) => status?.display_name === suggestion?.display_name,\r\n            ),\r\n        );\r\n      } else {\r\n        // Filter out the selected status if single select\r\n        output = this.statusSuggestions?.filter(\r\n          (suggestion) =>\r\n            this.selectedStatus?.display_name !== suggestion?.display_name,\r\n        );\r\n      }\r\n      return output;\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchStatusSuggestions(query) {\r\n      this.isStatusSuggestionsFetching = true;\r\n      const responseData = !query\r\n        ? this.statusOptions\r\n        : this.statusOptions?.filter((item) =>\r\n            item?.toLowerCase()?.includes(query?.toLowerCase()),\r\n          );\r\n\r\n      this.statusSuggestions = responseData?.map((status, index) => {\r\n        return {\r\n          display_name: status,\r\n          _id: `${Date.now()}-${index}`, // Adjust field name according to your API\r\n        };\r\n      });\r\n      this.isStatusSuggestionsFetching = false;\r\n    },\r\n\r\n    handleReset(forceReset) {\r\n      if (!this.isMultiSelect || forceReset) {\r\n        this.statusSuggestions = [];\r\n      }\r\n    },\r\n    async handleFocus() {\r\n      await this.fetchStatusSuggestions();\r\n    },\r\n    handleSelect(status) {\r\n      if (this.isMultiSelect) {\r\n        this.addStatusToStatuses(status);\r\n      } else {\r\n        this.selectStatus(status);\r\n      }\r\n    },\r\n    selectStatus(status) {\r\n      this.status = status?.display_name;\r\n      this.$emit(\"on-status-update\", status);\r\n    },\r\n    addStatusToStatuses(status) {\r\n      let output = [...this.statuses, status];\r\n      this.$emit(\"on-statuses-update\", output);\r\n    },\r\n    removeStatusFromStatuses(status) {\r\n      let output = this.statuses.filter(\r\n        (item) => item?.display_name !== status?.display_name,\r\n      );\r\n      this.$emit(\"on-statuses-update\", output);\r\n    },\r\n    handleBlur() {\r\n      this.$emit(\"on-status-update\", { display_name: this.status });\r\n    },\r\n    validate() {\r\n      return this.$refs.searchInputRef?.validate();\r\n    },\r\n    scrollToComponent() {\r\n      return this.$refs.searchInputRef?.scrollToComponent();\r\n    },\r\n    clearSuggestions() {\r\n      this.statusSuggestions = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StatusSearch.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StatusSearch.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./StatusSearch.vue?vue&type=template&id=b4532970\"\nimport script from \"./StatusSearch.vue?vue&type=script&lang=js\"\nexport * from \"./StatusSearch.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","isMultiSelect","showSelectedList","statuses","length","_l","status","key","_id","attrs","display_name","on","$event","removeStatusFromStatuses","_e","ref","dropdownLabel","dropdownId","getFilteredStatusSuggestions","verticalPadding","showError","fieldValidations","isStatusSuggestionsFetching","order","handleSelect","handleReset","handleBlur","handleFocus","clearSuggestions","fetchDebouncedStatusSuggestions","$emit","model","value","callback","$$v","expression","staticRenderFns","components","GeneralRemovableItem","FormInput","props","type","Array","required","default","selectedStatus","Object","String","Boolean","Number","statusOptions","data","statusSuggestions","debounce","fetchStatusSuggestions","watch","newVal","computed","output","filter","suggestion","some","methods","query","responseData","item","toLowerCase","includes","map","index","Date","now","forceReset","addStatusToStatuses","selectStatus","validate","$refs","searchInputRef","scrollToComponent","component"],"sourceRoot":""}