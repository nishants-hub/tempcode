{"version":3,"file":"js/3343.3c197ac3.js","mappings":"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","sources":["webpack://construction-commercial-search-frontend/./src/views/SignupPage.vue","webpack://construction-commercial-search-frontend/src/views/SignupPage.vue","webpack://construction-commercial-search-frontend/./src/views/SignupPage.vue?8582","webpack://construction-commercial-search-frontend/./src/views/SignupPage.vue?7576"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('AuthWrapper',{staticClass:\"min-h-screen\",attrs:{\"title\":_vm.update ? 'Edit User' : 'Create Account'}},[_c('div',{staticClass:\"z-100000 absolute right-spacing-300 top-spacing-300 cursor-pointer\",on:{\"click\":function($event){return _vm.handleClose()}}},[_c('IconX',{staticClass:\"h-spacing-300 w-spacing-300 text-content-on-neutral-secondary hover:text-content-on-neutral-primary\"})],1),_c('form',{staticClass:\"flex flex-1 flex-col overflow-y-auto px-spacing-300\",on:{\"submit\":function($event){$event.preventDefault();return _vm.signupFn.apply(null, arguments)}}},[_c('div',{staticClass:\"flex flex-1 flex-col gap-spacing-200 py-spacing-50\"},[_c('GeneralSelect',{attrs:{\"label\":'Role',\"options\":_vm.roleOptions,\"selected-option-key\":_vm.role},on:{\"option-selected\":_vm.handleSelectedRole,\"enter-pressed\":function($event){return _vm.$focusNextElement('user-name')}}}),_c('FormInput',{ref:\"create-account-user-name\",attrs:{\"input-type\":\"text\",\"label\":\"Name\",\"input-id\":\"user-name\",\"field-validations\":_vm.fieldValidations?.name},on:{\"enter-pressed\":function($event){return _vm.$focusNextElement('user-email')}},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_c('FormInput',{ref:\"create-account-user-email\",attrs:{\"input-type\":\"user-email\",\"label\":\"Email\",\"input-id\":\"email\",\"autocomplete\":\"off\",\"field-validations\":_vm.fieldValidations?.email},on:{\"enter-pressed\":function($event){return _vm.$focusNextElement('user-password')}},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),(!_vm.update)?_c('FormInput',{ref:\"create-account-user-password\",attrs:{\"input-type\":\"user-password\",\"label\":\"Password\",\"input-id\":\"cc-number\",\"field-validations\":_vm.fieldValidations?.password,\"autocomplete\":\"off\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}):_vm._e()],1),_c('div',{staticClass:\"sticky bottom-0 bg-bg-neutral-default pt-spacing-100\",on:{\"click\":function($event){return _vm.signupFn()}}},[_c('GeneralButton',{attrs:{\"button-type\":'button',\"type\":'brand',\"size\":'large',\"emphasis\":'primary',\"icon-position\":'none',\"icon\":'',\"image\":'',\"is-disabled\":false,\"is-loading\":_vm.isLoading,\"label\":_vm.update ? 'Update Account Details' : 'Create Account'}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <AuthWrapper\r\n    :title=\"update ? 'Edit User' : 'Create Account'\"\r\n    class=\"min-h-screen\"\r\n  >\r\n    <div\r\n      class=\"z-100000 absolute right-spacing-300 top-spacing-300 cursor-pointer\"\r\n      @click=\"handleClose()\"\r\n    >\r\n      <IconX\r\n        class=\"h-spacing-300 w-spacing-300 text-content-on-neutral-secondary hover:text-content-on-neutral-primary\"\r\n      />\r\n    </div>\r\n    <form\r\n      @submit.prevent=\"signupFn\"\r\n      class=\"flex flex-1 flex-col overflow-y-auto px-spacing-300\"\r\n    >\r\n      <div class=\"flex flex-1 flex-col gap-spacing-200 py-spacing-50\">\r\n        <GeneralSelect\r\n          :label=\"'Role'\"\r\n          :options=\"roleOptions\"\r\n          :selected-option-key=\"role\"\r\n          @option-selected=\"handleSelectedRole\"\r\n          @enter-pressed=\"$focusNextElement('user-name')\"\r\n        />\r\n        <FormInput\r\n          ref=\"create-account-user-name\"\r\n          v-model=\"name\"\r\n          input-type=\"text\"\r\n          label=\"Name\"\r\n          input-id=\"user-name\"\r\n          :field-validations=\"fieldValidations?.name\"\r\n          @enter-pressed=\"$focusNextElement('user-email')\"\r\n        />\r\n        <FormInput\r\n          ref=\"create-account-user-email\"\r\n          v-model=\"email\"\r\n          input-type=\"user-email\"\r\n          label=\"Email\"\r\n          input-id=\"email\"\r\n          autocomplete=\"off\"\r\n          :field-validations=\"fieldValidations?.email\"\r\n          @enter-pressed=\"$focusNextElement('user-password')\"\r\n        />\r\n        <FormInput\r\n          v-if=\"!update\"\r\n          ref=\"create-account-user-password\"\r\n          v-model=\"password\"\r\n          input-type=\"user-password\"\r\n          label=\"Password\"\r\n          input-id=\"cc-number\"\r\n          :field-validations=\"fieldValidations?.password\"\r\n          autocomplete=\"off\"\r\n        />\r\n      </div>\r\n      <div\r\n        @click=\"signupFn()\"\r\n        class=\"sticky bottom-0 bg-bg-neutral-default pt-spacing-100\"\r\n      >\r\n        <GeneralButton\r\n          :button-type=\"'button'\"\r\n          :type=\"'brand'\"\r\n          :size=\"'large'\"\r\n          :emphasis=\"'primary'\"\r\n          :icon-position=\"'none'\"\r\n          :icon=\"''\"\r\n          :image=\"''\"\r\n          :is-disabled=\"false\"\r\n          :is-loading=\"isLoading\"\r\n          :label=\"update ? 'Update Account Details' : 'Create Account'\"\r\n        />\r\n        <!-- <div class=\"mt-spacing-150 w-full\">\r\n          <p\r\n            class=\"mt-spacing-25 text-center text-body/l/relaxed/400 text-content-on-neutral-secondary\"\r\n          >\r\n            Already have an account?<RouterLink\r\n              to=\"/login\"\r\n              class=\"text-body/l/relaxed/500 hover:text-content-on-neutral-primary\"\r\n            >\r\n              Login</RouterLink\r\n            >\r\n          </p>\r\n        </div> -->\r\n      </div>\r\n    </form>\r\n  </AuthWrapper>\r\n</template>\r\n\r\n<script>\r\nimport { FormValidationRule } from \"@/utilities/helpers/formValidations\";\r\nimport { mapActions } from \"vuex\";\r\nexport default {\r\n  components: {\r\n    AuthWrapper: () => import(\"@/components/Auth/AuthWrapper.vue\"),\r\n    GeneralButton: () => import(\"@/components/General/CustomButton.vue\"),\r\n    FormInput: () => import(\"@/components/General/FormInput.vue\"),\r\n    GeneralSelect: () => import(\"@/components/General/Select.vue\"),\r\n    IconX: () => import(\"@/components/svgIcons/x.vue\"),\r\n  },\r\n  props: {\r\n    formData: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n    update: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      isLoading: false,\r\n      roleOptions: [\r\n        { key: \"ADMIN\", value: \"Admin\", default: true },\r\n        { key: \"MANAGER\", value: \"Manager\" },\r\n        { key: \"VIEWER\", value: \"Viewer\" },\r\n      ],\r\n      role: \"ADMIN\",\r\n      fieldValidations: {\r\n        email: new FormValidationRule({\r\n          type: \"EMAIL\",\r\n          required: true,\r\n        }),\r\n        password: new FormValidationRule({\r\n          type: \"PASSWORD\",\r\n          required: true,\r\n        }),\r\n        name: new FormValidationRule({\r\n          minLength: 2,\r\n          required: true,\r\n        }),\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    formData: {\r\n      handler(newValue) {\r\n        if (newValue?.email) {\r\n          this.email = newValue?.email;\r\n        }\r\n        if (newValue?.name) {\r\n          this.name = newValue?.name;\r\n        }\r\n        if (newValue?.role) {\r\n          this.role = newValue?.role;\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n    update: {\r\n      handler(newValue) {\r\n        if (!newValue) {\r\n          this.resetFields();\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      signup: \"auth/signup\",\r\n      updateUserByID: \"auth/updateUserByID\",\r\n    }),\r\n    buildPayload() {\r\n      let payload = {\r\n        name: this.name,\r\n        email: this.email,\r\n        role: this.role,\r\n      };\r\n      if (!this.update) {\r\n        payload.password = this.password;\r\n      }\r\n      return payload;\r\n    },\r\n    async signupFn() {\r\n      const isValid = this.$validateForm();\r\n      if (!isValid) {\r\n        return;\r\n      }\r\n      this.isLoading = true;\r\n      let payload = this.buildPayload();\r\n      if (this.update) {\r\n        const res = await this.updateUserByID({\r\n          id: this.formData?._id,\r\n          body: payload,\r\n        });\r\n        if (res?.success) {\r\n          this.$bus.$emit(\"refresh-users-list\");\r\n          this.$toast.success(res?.message);\r\n        } else {\r\n          this.$toast.error(res?.message);\r\n        }\r\n      } else {\r\n        const res = await this.signup(payload);\r\n        if (res?.success) {\r\n          this.resetFields();\r\n          this.$bus.$emit(\"refresh-users-list\");\r\n          this.$toast.success(res?.message);\r\n        } else {\r\n          this.$toast.error(res?.message);\r\n        }\r\n      }\r\n      this.isLoading = false;\r\n    },\r\n    handleSelectedRole(role) {\r\n      this.role = role;\r\n    },\r\n    resetFields() {\r\n      this.email = \"\";\r\n      this.name = \"\";\r\n      this.role = \"ADMIN\";\r\n      this.password = \"\";\r\n    },\r\n    handleClose() {\r\n      this.$emit(\"close-pressed\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SignupPage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SignupPage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SignupPage.vue?vue&type=template&id=5c7851f8\"\nimport script from \"./SignupPage.vue?vue&type=script&lang=js\"\nexport * from \"./SignupPage.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","update","on","$event","handleClose","preventDefault","signupFn","apply","arguments","roleOptions","role","handleSelectedRole","$focusNextElement","ref","fieldValidations","name","model","value","callback","$$v","expression","email","_e","password","isLoading","staticRenderFns","components","AuthWrapper","GeneralButton","FormInput","GeneralSelect","IconX","props","formData","type","Object","default","Boolean","required","data","key","FormValidationRule","minLength","watch","handler","newValue","immediate","deep","resetFields","methods","mapActions","signup","updateUserByID","buildPayload","payload","isValid","$validateForm","res","id","_id","body","success","$bus","$emit","$toast","message","error","component"],"sourceRoot":""}