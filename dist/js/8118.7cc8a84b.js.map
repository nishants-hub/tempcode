{"version":3,"file":"js/8118.7cc8a84b.js","mappings":"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","sources":["webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/ProductSearch.vue","webpack://construction-commercial-search-frontend/src/components/Utility/CustomDropdowns/ProductSearch.vue","webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/ProductSearch.vue?8c2f","webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/ProductSearch.vue?8bd7"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-full\"},[(_vm.isMultiSelect && _vm.showSelectedList && _vm.products?.length > 0)?_c('div',{staticClass:\"mb-spacing-250 flex w-full flex-wrap gap-spacing-150\"},_vm._l((_vm.products),function(product){return _c('GeneralRemovableItem',{key:product?._id,attrs:{\"item-name\":product?.originalTitle},on:{\"on-item-removed\":function($event){return _vm.removeProductFromProducts(product)}}})}),1):_vm._e(),_c('div',{staticClass:\"flex items-stretch gap-spacing-200\"},[_c('FormInput',{attrs:{\"label\":_vm.dropdownLabel,\"input-type\":'searchable-input',\"inputId\":_vm.dropdownId,\"prevent-v-model\":true,\"clear-button\":_vm.product ? true : false,\"suggestions\":_vm.getFilteredProductSuggestions,\"vertical-padding\":_vm.verticalPadding,\"show-error\":_vm.showError,\"is-suggestions-fetching\":_vm.isProductSuggestionsFetching},on:{\"set-suggestion\":_vm.handleSelect,\"reset-suggestions\":_vm.handleReset,\"fetch-suggestions\":_vm.fetchDebouncedProductSuggestions,\"enter-pressed\":function($event){return _vm.$emit('enter-pressed')}},model:{value:(_vm.product),callback:function ($$v) {_vm.product=$$v},expression:\"product\"}}),(_vm.showSelectButton && _vm.isMultiSelect)?_c('div',{staticClass:\"flex max-h-spacing-500 cursor-pointer items-center justify-center\",on:{\"click\":_vm.openProductSelectModal}},[_c('i',{staticClass:\"fa-solid fa-list-ul relative scale-[1.2] text-constant-brand-primary hover:text-hover-constant-brand-primary\"})]):_vm._e()],1),_c('ProductSelectModal')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"w-full\">\r\n    <!-- Display selected products in multi-select mode -->\r\n    <div\r\n      v-if=\"isMultiSelect && showSelectedList && products?.length > 0\"\r\n      class=\"mb-spacing-250 flex w-full flex-wrap gap-spacing-150\"\r\n    >\r\n      <GeneralRemovableItem\r\n        v-for=\"product in products\"\r\n        :key=\"product?._id\"\r\n        :item-name=\"product?.originalTitle\"\r\n        @on-item-removed=\"removeProductFromProducts(product)\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Form input for searching and selecting products -->\r\n    <div class=\"flex items-stretch gap-spacing-200\">\r\n      <FormInput\r\n        v-model=\"product\"\r\n        :label=\"dropdownLabel\"\r\n        :input-type=\"'searchable-input'\"\r\n        :inputId=\"dropdownId\"\r\n        :prevent-v-model=\"true\"\r\n        :clear-button=\"product ? true : false\"\r\n        :suggestions=\"getFilteredProductSuggestions\"\r\n        :vertical-padding=\"verticalPadding\"\r\n        :show-error=\"showError\"\r\n        :is-suggestions-fetching=\"isProductSuggestionsFetching\"\r\n        @set-suggestion=\"handleSelect\"\r\n        @reset-suggestions=\"handleReset\"\r\n        @fetch-suggestions=\"fetchDebouncedProductSuggestions\"\r\n        @enter-pressed=\"$emit('enter-pressed')\"\r\n      />\r\n      <div\r\n        v-if=\"showSelectButton && isMultiSelect\"\r\n        class=\"flex max-h-spacing-500 cursor-pointer items-center justify-center\"\r\n        @click=\"openProductSelectModal\"\r\n      >\r\n        <i\r\n          class=\"fa-solid fa-list-ul relative scale-[1.2] text-constant-brand-primary hover:text-hover-constant-brand-primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <ProductSelectModal />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { debounce } from \"lodash\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    GeneralRemovableItem: () =>\r\n      import(\"@/components/General/RemovableItem.vue\"),\r\n    FormInput: () => import(\"@/components/General/FormInput.vue\"),\r\n    ProductSelectModal: () =>\r\n      import(\"@/components/Modals/ProductSelectModal.vue\"),\r\n  },\r\n  props: {\r\n    products: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => [],\r\n    },\r\n    selectedProduct: {\r\n      type: Object,\r\n      required: false,\r\n      default: null,\r\n    },\r\n    dropdownLabel: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    dropdownId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    isMultiSelect: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n    showSelectedList: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n    showError: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n    verticalPadding: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    blackListed: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => [],\r\n    },\r\n    companyId: {\r\n      type: String,\r\n    },\r\n    showSelectButton: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      product: this.selectedProduct?.originalTitle || \"\",\r\n      productSuggestions: [],\r\n      isProductSuggestionsFetching: false,\r\n      fetchDebouncedProductSuggestions: debounce(\r\n        this.fetchProductSuggestions,\r\n        300,\r\n      ),\r\n      selectHandler: null,\r\n      id: Date.now(),\r\n    };\r\n  },\r\n  mounted() {\r\n    this.selectHandler = (data) => {\r\n      if (data?.products && data?.id === this.id) {\r\n        this.$emit(\"on-products-update\", data?.products);\r\n      }\r\n    };\r\n    if (this.showSelectButton && this.isMultiSelect) {\r\n      this.$bus.$on(\r\n        \"selected-products-from-product-select\",\r\n        this.selectHandler,\r\n      );\r\n    }\r\n  },\r\n  watch: {\r\n    selectedProduct() {\r\n      this.product = this.selectedProduct?.originalTitle;\r\n    },\r\n  },\r\n  computed: {\r\n    getFilteredProductSuggestions() {\r\n      let output;\r\n      if (this.isMultiSelect) {\r\n        // Filter out products already in the selected list\r\n        output = this.productSuggestions?.filter(\r\n          (suggestion) =>\r\n            !this.products?.some((product) => product?._id === suggestion?._id),\r\n        );\r\n      } else {\r\n        // Filter out the selected product if single select\r\n        output = this.productSuggestions?.filter(\r\n          (suggestion) => this.selectedProduct?._id !== suggestion?._id,\r\n        );\r\n      }\r\n      if (this.blackListed?.length > 0) {\r\n        output = output?.filter(\r\n          (suggestion) => !this.blackListed.includes(suggestion?._id),\r\n        );\r\n      }\r\n      return output;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(\"category\", [\"getProductSuggestions\"]),\r\n    openProductSelectModal() {\r\n      this.$bus.$emit(\"product-select-modal\", {\r\n        showModal: true,\r\n        products: [...this.products],\r\n        id: this.id,\r\n      });\r\n    },\r\n    async fetchProductSuggestions(query) {\r\n      if (query === \"\") {\r\n        this.productSuggestions = [];\r\n        return;\r\n      }\r\n      this.isProductSuggestionsFetching = true;\r\n      const responseData = await this.getProductSuggestions({\r\n        params: {\r\n          searchTerm: query?.trim(),\r\n          companyId: this.companyId ? this.companyId : undefined,\r\n        },\r\n      });\r\n      this.productSuggestions = responseData?.map((product) => {\r\n        return {\r\n          display_name: product?.title,\r\n          _id: product?.id, // Adjust field name according to your API\r\n          tree_view: true,\r\n          is_html: true,\r\n          path: product?.path,\r\n          originalTitle: product?.originalTitle,\r\n        };\r\n      });\r\n      this.isProductSuggestionsFetching = false;\r\n    },\r\n\r\n    handleReset(forceReset) {\r\n      if (!this.isMultiSelect || forceReset) {\r\n        this.productSuggestions = [];\r\n      }\r\n    },\r\n    handleSelect(product) {\r\n      if (this.isMultiSelect) {\r\n        this.addProductToProducts(product);\r\n      } else {\r\n        this.selectProduct(product);\r\n      }\r\n    },\r\n    selectProduct(product) {\r\n      this.product = product?.display_name;\r\n      this.$emit(\"on-product-update\", product);\r\n    },\r\n    addProductToProducts(product) {\r\n      let output = [...this.products, product];\r\n      this.$emit(\"on-products-update\", output);\r\n    },\r\n    removeProductFromProducts(product) {\r\n      let output = this.products.filter((item) => item?._id !== product?._id);\r\n      this.$emit(\"on-products-update\", output);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off(\"selected-products-from-product-select\", this.selectHandler);\r\n    this.selectHandler = null;\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProductSearch.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProductSearch.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ProductSearch.vue?vue&type=template&id=c916978e\"\nimport script from \"./ProductSearch.vue?vue&type=script&lang=js\"\nexport * from \"./ProductSearch.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","isMultiSelect","showSelectedList","products","length","_l","product","key","_id","attrs","originalTitle","on","$event","removeProductFromProducts","_e","dropdownLabel","dropdownId","getFilteredProductSuggestions","verticalPadding","showError","isProductSuggestionsFetching","handleSelect","handleReset","fetchDebouncedProductSuggestions","$emit","model","value","callback","$$v","expression","showSelectButton","openProductSelectModal","staticRenderFns","components","GeneralRemovableItem","FormInput","ProductSelectModal","props","type","Array","required","default","selectedProduct","Object","String","Boolean","blackListed","companyId","data","productSuggestions","debounce","fetchProductSuggestions","selectHandler","id","Date","now","mounted","$bus","$on","watch","computed","output","filter","suggestion","some","includes","methods","mapActions","showModal","query","responseData","getProductSuggestions","params","searchTerm","trim","undefined","map","display_name","title","tree_view","is_html","path","forceReset","addProductToProducts","selectProduct","item","beforeDestroy","$off","component"],"sourceRoot":""}