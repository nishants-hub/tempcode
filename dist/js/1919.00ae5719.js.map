{"version":3,"file":"js/1919.00ae5719.js","mappings":"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","sources":["webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/UnitSearch.vue","webpack://construction-commercial-search-frontend/src/components/Utility/CustomDropdowns/UnitSearch.vue","webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/UnitSearch.vue?e9b5","webpack://construction-commercial-search-frontend/./src/components/Utility/CustomDropdowns/UnitSearch.vue?3c68"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-full\"},[(_vm.isMultiSelect && _vm.showSelectedList && _vm.selectedUnits?.length > 0)?_c('div',{staticClass:\"mb-spacing-250 flex w-full flex-wrap gap-spacing-150\"},_vm._l((_vm.selectedUnits),function(unit){return _c('GeneralRemovableItem',{key:unit?._id,attrs:{\"item-name\":unit?.display_name},on:{\"on-item-removed\":function($event){return _vm.removeUnitFromSelected(unit)}}})}),1):_vm._e(),_c('FormInput',{ref:\"searchInputRef\",attrs:{\"label\":_vm.dropdownLabel,\"input-type\":'searchable-input',\"inputId\":_vm.dropdownId,\"prevent-v-model\":true,\"clear-button\":_vm.unit ? true : false,\"suggestions\":_vm.getFilteredUnitSuggestions,\"vertical-padding\":_vm.verticalPadding,\"show-error\":_vm.showError,\"field-validations\":_vm.fieldValidations,\"is-suggestions-fetching\":_vm.isUnitSuggestionsFetching,\"order\":_vm.order},on:{\"set-suggestion\":_vm.handleSelect,\"reset-suggestions\":_vm.handleReset,\"blur\":_vm.handleBlur,\"focus\":_vm.handleFocus,\"clear-suggestions\":_vm.clearSuggestions,\"fetch-suggestions\":_vm.fetchDebouncedUnitSuggestions,\"enter-pressed\":function($event){return _vm.$emit('enter-pressed')}},model:{value:(_vm.unit),callback:function ($$v) {_vm.unit=$$v},expression:\"unit\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"w-full\">\r\n    <!-- Display selected units in multi-select mode -->\r\n    <div\r\n      v-if=\"isMultiSelect && showSelectedList && selectedUnits?.length > 0\"\r\n      class=\"mb-spacing-250 flex w-full flex-wrap gap-spacing-150\"\r\n    >\r\n      <GeneralRemovableItem\r\n        v-for=\"unit in selectedUnits\"\r\n        :key=\"unit?._id\"\r\n        :item-name=\"unit?.display_name\"\r\n        @on-item-removed=\"removeUnitFromSelected(unit)\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Form input for searching and selecting units -->\r\n    <FormInput\r\n      v-model=\"unit\"\r\n      ref=\"searchInputRef\"\r\n      :label=\"dropdownLabel\"\r\n      :input-type=\"'searchable-input'\"\r\n      :inputId=\"dropdownId\"\r\n      :prevent-v-model=\"true\"\r\n      :clear-button=\"unit ? true : false\"\r\n      :suggestions=\"getFilteredUnitSuggestions\"\r\n      :vertical-padding=\"verticalPadding\"\r\n      :show-error=\"showError\"\r\n      :field-validations=\"fieldValidations\"\r\n      :is-suggestions-fetching=\"isUnitSuggestionsFetching\"\r\n      :order=\"order\"\r\n      @set-suggestion=\"handleSelect\"\r\n      @reset-suggestions=\"handleReset\"\r\n      @blur=\"handleBlur\"\r\n      @focus=\"handleFocus\"\r\n      @clear-suggestions=\"clearSuggestions\"\r\n      @fetch-suggestions=\"fetchDebouncedUnitSuggestions\"\r\n      @enter-pressed=\"$emit('enter-pressed')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { debounce } from \"lodash\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    GeneralRemovableItem: () =>\r\n      import(\"@/components/General/RemovableItem.vue\"),\r\n    FormInput: () => import(\"@/components/General/FormInput.vue\"),\r\n  },\r\n  props: {\r\n    selectedUnits: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => [],\r\n    },\r\n    selectedUnit: {\r\n      type: Object,\r\n      required: false,\r\n      default: null,\r\n    },\r\n    dropdownLabel: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    dropdownId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    isMultiSelect: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n    showSelectedList: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n    showError: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true,\r\n    },\r\n    verticalPadding: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    fieldValidations: {\r\n      type: Object,\r\n      required: false,\r\n    },\r\n    order: {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      unit: this.selectedUnit?.display_name,\r\n      unitSuggestions: [],\r\n      isUnitSuggestionsFetching: false,\r\n      fetchDebouncedUnitSuggestions: debounce(this.fetchUnitSuggestions, 300),\r\n      unitOptions: [],\r\n    };\r\n  },\r\n  watch: {\r\n    selectedUnit() {\r\n      this.unit = this.selectedUnit?.display_name;\r\n    },\r\n    unit(newVal) {\r\n      this.$emit(\"on-unit-update\", { display_name: newVal });\r\n    },\r\n  },\r\n  async mounted() {\r\n    const response = await this.getOptions({\r\n      params: { type: \"PRODUCT_UNIT\" },\r\n    });\r\n    if (response?.success) {\r\n      this.unitOptions = response?.data;\r\n    }\r\n  },\r\n  computed: {\r\n    getFilteredUnitSuggestions() {\r\n      let output;\r\n      if (this.isMultiSelect) {\r\n        // Filter out units already in the selected list\r\n        output = this.unitSuggestions?.filter(\r\n          (suggestion) =>\r\n            !this.selectedUnits?.some(\r\n              (unit) => unit?.display_name === suggestion?.display_name,\r\n            ),\r\n        );\r\n      } else {\r\n        // Filter out the selected unit if single select\r\n        output = this.unitSuggestions?.filter(\r\n          (suggestion) =>\r\n            this.selectedUnit?.display_name !== suggestion?.display_name,\r\n        );\r\n      }\r\n      return output;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(\"utils\", [\"getOptions\"]),\r\n    async fetchUnitSuggestions(query) {\r\n      this.isUnitSuggestionsFetching = true;\r\n      const responseData = !query\r\n        ? this.unitOptions\r\n        : this.unitOptions?.filter((item) =>\r\n            item?.value?.toLowerCase()?.includes(query?.toLowerCase()),\r\n          );\r\n\r\n      this.unitSuggestions = responseData?.map((unit) => {\r\n        return {\r\n          display_name: unit?.value,\r\n          _id: unit?.id, // Adjust field name according to your API\r\n        };\r\n      });\r\n      this.isUnitSuggestionsFetching = false;\r\n    },\r\n\r\n    handleReset(forceReset) {\r\n      if (!this.isMultiSelect || forceReset) {\r\n        this.unitSuggestions = [];\r\n      }\r\n    },\r\n    async handleFocus() {\r\n      await this.fetchUnitSuggestions();\r\n    },\r\n    handleSelect(unit) {\r\n      if (this.isMultiSelect) {\r\n        this.addUnitToSelected(unit);\r\n      } else {\r\n        this.selectUnit(unit);\r\n      }\r\n    },\r\n    selectUnit(unit) {\r\n      this.unit = unit?.display_name;\r\n      this.$emit(\"on-unit-update\", unit);\r\n    },\r\n    addUnitToSelected(unit) {\r\n      let output = [...this.selectedUnits, unit];\r\n      this.$emit(\"on-units-update\", output);\r\n    },\r\n    removeUnitFromSelected(unit) {\r\n      let output = this.selectedUnits.filter(\r\n        (item) => item?.display_name !== unit?.display_name,\r\n      );\r\n      this.$emit(\"on-units-update\", output);\r\n    },\r\n    handleBlur() {\r\n      // this.$emit(\"on-unit-update\", { display_name: this.unit });\r\n    },\r\n    validate() {\r\n      return this.$refs.searchInputRef?.validate();\r\n    },\r\n    scrollToComponent() {\r\n      return this.$refs.searchInputRef?.scrollToComponent();\r\n    },\r\n    clearSuggestions() {\r\n      this.unitSuggestions = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UnitSearch.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UnitSearch.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./UnitSearch.vue?vue&type=template&id=ee7b7924\"\nimport script from \"./UnitSearch.vue?vue&type=script&lang=js\"\nexport * from \"./UnitSearch.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","isMultiSelect","showSelectedList","selectedUnits","length","_l","unit","key","_id","attrs","display_name","on","$event","removeUnitFromSelected","_e","ref","dropdownLabel","dropdownId","getFilteredUnitSuggestions","verticalPadding","showError","fieldValidations","isUnitSuggestionsFetching","order","handleSelect","handleReset","handleBlur","handleFocus","clearSuggestions","fetchDebouncedUnitSuggestions","$emit","model","value","callback","$$v","expression","staticRenderFns","components","GeneralRemovableItem","FormInput","props","type","Array","required","default","selectedUnit","Object","String","Boolean","Number","data","unitSuggestions","debounce","fetchUnitSuggestions","unitOptions","watch","newVal","mounted","response","getOptions","params","success","computed","output","filter","suggestion","some","methods","mapActions","query","responseData","item","toLowerCase","includes","map","id","forceReset","addUnitToSelected","selectUnit","validate","$refs","searchInputRef","scrollToComponent","component"],"sourceRoot":""}